#include <stdio.h>
#include <unistd.h>
#include <sys/wait.h>
#include <stdlib.h>

int main(void)
{
        pid_t pid;
        int status;
        char *argv[] = {"/bin/ls", "-l", "/tmp", NULL};
        int i;

        for (i = 0; i < 5; i++)
        {
                pid = fork();

                if (pid == -1)
                {
                        perror("Fork failed");
                        exit(EXIT_FAILURE);
                }
                if (pid == 0)
                {
                        if (execve(argv[0], argv, NULL) == -1)
                        {
                                perror("execve failed");
                                exit(EXIT_FAILURE);
                        }
                }
                else
                {
                        wait(&status);
                        printf("Child process %d exited with status %d\n", pid, WEXITSTATUS(status));
                }
                sleep(3);
        }
        return (0);
}